<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>D.Yang&#39;s Blog</title>
  
  <subtitle>To Be A Great Coder</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://dyang.top/"/>
  <updated>2020-06-24T11:08:22.627Z</updated>
  <id>http://dyang.top/</id>
  
  <author>
    <name>D.Yang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在 Ubuntu 18.04 上通过 Minikube 安装 Kubernetes</title>
    <link href="http://dyang.top/2019/11/15/use-minikube-install-k8s-on-ubuntu18-04/"/>
    <id>http://dyang.top/2019/11/15/use-minikube-install-k8s-on-ubuntu18-04/</id>
    <published>2019-11-15T02:41:18.000Z</published>
    <updated>2020-06-24T11:08:22.627Z</updated>
    
    <content type="html"><![CDATA[<p>最近一直在学习 Kubernetes，并自购了一台服务器进行 Kubernetes 的部署学习，在这过程中踩了一些坑，所以把这些安装过程记录下来，以便后续进行回顾。</p><p>通过本文，我们将会学习到如何在 Ubuntu 18.04 LTS 上通过 Minikube 安装一个单节点 Kubernetes 测试环境。</p><a id="more"></a><hr><h2 id="安装必要工具"><a href="#安装必要工具" class="headerlink" title="安装必要工具"></a>安装必要工具</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common</span><br></pre></td></tr></table></figure><p>由于国内网络的不稳定性，我们需要将相关镜像源切换为国内阿里云的镜像。</p><h2 id="添加镜像相关秘钥"><a href="#添加镜像相关秘钥" class="headerlink" title="添加镜像相关秘钥"></a>添加镜像相关秘钥</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><h2 id="添加阿里云镜像"><a href="#添加阿里云镜像" class="headerlink" title="添加阿里云镜像"></a>添加阿里云镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class="line">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span><br><span class="line">EOF</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>在阿里云镜像地址中貌似没有找到 18.04(bionic) 的源，不过也无所谓，就用 16.04(xenial) 即可。</p><h2 id="安装-Docker、kubectl"><a href="#安装-Docker、kubectl" class="headerlink" title="安装 Docker、kubectl"></a>安装 Docker、kubectl</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y docker.io kubectl</span><br></pre></td></tr></table></figure><h2 id="配置阿里云-Docker-镜像加速器"><a href="#配置阿里云-Docker-镜像加速器" class="headerlink" title="配置阿里云 Docker 镜像加速器"></a>配置阿里云 Docker 镜像加速器</h2><p>这里采用了阿里云的镜像加速器（需要阿里云账号进行登录），地址：阿里云 -&gt; 容器镜像服务 -&gt; 镜像中心 -&gt; 镜像加速器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'</span><br><span class="line">&#123;</span><br><span class="line">"registry-mirrors": ["https://xxxxxx.mirror.aliyuncs.com"]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>以上配置是阿里云镜像加速器中的配置，本文中这一块儿是直接从阿里云镜像加速器中的配置说明复制的，大家根据自己的情况在阿里云镜像加速器中去复制。</p><h2 id="安装-Minikube"><a href="#安装-Minikube" class="headerlink" title="安装 Minikube"></a>安装 Minikube</h2><p>目前最新 v1.5.2，查看最新版：<a href="https://github.com/kubernetes/minikube/releases" target="_blank" rel="noopener">https://github.com/kubernetes/minikube/releases</a><br>如果curl无法下载，也可以通过手动下载并上传到服务器的形式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/v1.5.2/minikube-linux-amd64 &amp;&amp; chmod +x minikube &amp;&amp; sudo mv minikube /usr/local/bin/</span><br></pre></td></tr></table></figure><h2 id="使用-Minikube-创建-Kubernetes"><a href="#使用-Minikube-创建-Kubernetes" class="headerlink" title="使用 Minikube 创建 Kubernetes"></a>使用 Minikube 创建 Kubernetes</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">minikube start --vm-driver=none --apiserver-ips=your-server-ip --image-mirror-country cn \</span><br><span class="line"> --iso-url=https://kubernetes.oss-cn-hangzhou.aliyuncs.com/minikube/iso/minikube-v1.5.2.iso \</span><br><span class="line"> --registry-mirror=https://xxxxxx.mirror.aliyuncs.com \</span><br><span class="line"> --image-repository=https://registry.aliyuncs.com/google_containers</span><br></pre></td></tr></table></figure><p>此处的 <code>registry-mirror</code> 是阿里云的镜像加速器的 mirror，换成你自己的即可; <code>apiserver-ips</code> 则是你服务器的IP，因为如果需要远程访问的话，需要将服务器的IP进行暴露，同样换成你自己的服务器IP即可</p><p>如果不出意外的话，由 minikube 创建的单机 Kubernetes 环境就成功了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近一直在学习 Kubernetes，并自购了一台服务器进行 Kubernetes 的部署学习，在这过程中踩了一些坑，所以把这些安装过程记录下来，以便后续进行回顾。&lt;/p&gt;
&lt;p&gt;通过本文，我们将会学习到如何在 Ubuntu 18.04 LTS 上通过 Minikube 安装一个单节点 Kubernetes 测试环境。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Kubernetes" scheme="http://dyang.top/categories/Kubernetes/"/>
    
    
      <category term="Kubernetes" scheme="http://dyang.top/tags/Kubernetes/"/>
    
      <category term="K8S" scheme="http://dyang.top/tags/K8S/"/>
    
      <category term="minikube" scheme="http://dyang.top/tags/minikube/"/>
    
      <category term="ubuntu" scheme="http://dyang.top/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>IDEA快捷键整理</title>
    <link href="http://dyang.top/2016/01/14/idea-keymap/"/>
    <id>http://dyang.top/2016/01/14/idea-keymap/</id>
    <published>2016-01-14T08:36:44.000Z</published>
    <updated>2020-06-24T11:08:22.627Z</updated>
    
    <content type="html"><![CDATA[<p>IntelliJ IDEA 是 JetBrains 公司开发的一款 IDE 工具，是公认的最好的 Java 开发工具之一，使用 IDEA 能有效提高开发效率，熟悉一些常用的快捷键会给开发带来很多便捷。本文整理了 IDEA 的快捷键，并辅以说明，以便自己或他人查用。</p><a id="more"></a><blockquote><p>Mac 修饰键符号说明：</p><ul><li><code>⌘</code> Command</li><li><code>⌃</code> Control</li><li><code>⌥</code> Option</li><li><code>⇧</code> Shift</li><li><code>↩</code>︎ Enter</li><li><code>⌫</code> Delete</li><li><code>⇥</code> Tab</li><li><code>⇪</code> CapsLock</li><li><code>↑</code> 上箭头</li><li><code>↓</code> 下箭头</li><li><code>←</code> 左箭头</li><li><code>→</code> 右箭头</li><li><code>Space</code> 空格</li></ul></blockquote><hr><h2 id="编辑相关快捷键（Editing）"><a href="#编辑相关快捷键（Editing）" class="headerlink" title="编辑相关快捷键（Editing）"></a>编辑相关快捷键（Editing）</h2><ul><li><code>Control + Space</code> 基本语法提示</li><li><code>Control + Shift + Space</code> 智能语法提示</li><li><code>Command + Shift + Enter︎</code> 自动完成结构体，比如输入一个<code>if</code>，按下此快捷键可以补全结构。</li><li><code>Command + P</code>：参数提示，比如我需要看某个函数的参数，按这个快捷键就可以看到。</li><li><code>Control + J</code>：快速查看某个方法的文档</li><li><code>Command + N</code>：快速生成代码(Getters，Setters，Constructors，hashCode/equals，toString)</li><li><code>Control + O</code>：重写方法(Override)</li><li><code>Control + I</code>：实现方法(Implement)</li><li><code>Command + Option + T</code>：在代码周围添加代码(if..else, try..catch, for, synchronized, ……)，比如一段代码需要捕捉异常，选中这段代码，按下此快捷键，可以快速在其周围添加诸如 try..catch 等代码</li><li><code>Command + /</code>：快捷单行注释</li><li><code>Command + Option + /</code>：快捷块注释(多行注释)</li><li><code>Option + ↑</code> 和 <code>Option + ↓</code>：快速选择代码块，不好描述，自行测试，挺有用。</li><li><code>Option + Enter︎</code>：修正代码建议（非常有用，能够快速修正代码）</li><li><code>Command + Option + L</code>：代码格式化</li><li><code>Control + Option + O</code>：自动分析 import 语句（删除多余的，补全缺少的）</li></ul><p>未完持续……</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;IntelliJ IDEA 是 JetBrains 公司开发的一款 IDE 工具，是公认的最好的 Java 开发工具之一，使用 IDEA 能有效提高开发效率，熟悉一些常用的快捷键会给开发带来很多便捷。本文整理了 IDEA 的快捷键，并辅以说明，以便自己或他人查用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JetBrains系列IDE技巧" scheme="http://dyang.top/categories/JetBrains%E7%B3%BB%E5%88%97IDE%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="JetBrains" scheme="http://dyang.top/tags/JetBrains/"/>
    
      <category term="IDEA" scheme="http://dyang.top/tags/IDEA/"/>
    
  </entry>
  
</feed>
